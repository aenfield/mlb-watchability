name: Daily MLB Watchability Markdown

on:
  schedule:
    # Run every day at 6:00 AM Pacific Time (1300 PM UTC during PDT)
    - cron: "0 13 * * *"

  # Allow manual triggering, with particular defaults suitable for manually triggered jobs
  workflow_dispatch:
    inputs:
      date:
        description: "Game date (YYYY-MM-DD, defaults to today's date)"
        required: false
        type: string
      game-desc-source:
        description: "Game description source ('llm' or 'canned', defaults to 'canned')"
        required: false
        type: choice
        options:
          - llm
          - canned
        default: canned
      game-desc-limit:
        description: "Maximum number of games to generate descriptions for (defaults to 1)"
        required: false
        type: string
        default: "1"
      llm-model:
        description: "LLM model to use ('normal' or 'cheap', defaults to 'cheap')"
        required: false
        type: choice
        options:
          - normal
          - cheap
        default: cheap
      llm-provider:
        description: "LLM model provider ('anthropic' or 'openai', defaults to 'anthropic')"
        required: false
        type: choice
        options:
          - anthropic
          - openai
        default: anthropic

jobs:
  generate-markdown:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync

      - name: Generate markdown file
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY_DAILYGEN }}
        run: |
          # Use defaults for scheduled runs (where the first parts will be empty)
          GAME_DESC_SOURCE="${{ github.event.inputs.game-desc-source || 'llm' }}"
          GAME_DESC_LIMIT="${{ github.event.inputs.game-desc-limit || '30' }}"
          LLM_MODEL="${{ github.event.inputs.llm-model || 'cheap' }}"
          LLM_PROVIDER="${{ github.event.inputs.llm-provider || 'anthropic' }}"

          if [ -n "${{ github.event.inputs.date }}" ]; then
            echo "Running mlbw-markdown with specified date: ${{ github.event.inputs.date }}"
            echo "Using game-desc-source: $GAME_DESC_SOURCE, game-desc-limit: $GAME_DESC_LIMIT, llm-model: $LLM_MODEL, llm-provider: $LLM_PROVIDER"
            uv run mlbw-markdown "${{ github.event.inputs.date }}" --game-desc-source "$GAME_DESC_SOURCE" --game-desc-limit "$GAME_DESC_LIMIT" --llm-model "$LLM_MODEL" --llm-model-provider "$LLM_PROVIDER"
          else
            echo "Running mlbw-markdown with today's date"
            echo "Using game-desc-source: $GAME_DESC_SOURCE, game-desc-limit: $GAME_DESC_LIMIT, llm-model: $LLM_MODEL, llm-provider: $LLM_PROVIDER"
            uv run mlbw-markdown --game-desc-source "$GAME_DESC_SOURCE" --game-desc-limit "$GAME_DESC_LIMIT" --llm-model "$LLM_MODEL" --llm-model-provider "$LLM_PROVIDER"
          fi

      - name: Upload markdown artifact
        uses: actions/upload-artifact@v4
        with:
          name: mlb-watchability-markdown
          path: mlb_what_to_watch_*.md
          retention-days: 30

      - name: Checkout blog repository
        uses: actions/checkout@v4
        with:
          repository: aenfield/blog-eleventy
          token: ${{ secrets.BLOG_REPO_TOKEN }}
          path: blog-repo

      - name: Create mlbw directory if needed
        run: mkdir -p blog-repo/content/blog/mlbw

      - name: Copy markdown file to blog repository
        run: |
          # Find the generated markdown file and copy it
          MARKDOWN_FILE=$(ls mlb_what_to_watch_*.md 2>/dev/null | head -n 1)
          if [ -n "$MARKDOWN_FILE" ]; then
            echo "Copying $MARKDOWN_FILE to blog repository"
            cp "$MARKDOWN_FILE" blog-repo/content/blog/mlbw/
          else
            echo "No markdown file found to copy"
            exit 1
          fi

      - name: Commit and push to blog repository
        run: |
          cd blog-repo
          git config user.name "MLB Watchability Bot"
          git config user.email "action@github.com"

          # Check if there are changes to commit
          if [ -n "$(git status --porcelain)" ]; then
            git add content/blog/mlbw/
            git commit -m "Add daily MLB watchability report $(date +%Y-%m-%d)

            Generated automatically from mlb-watchability repository

            ðŸ¤– Generated with [Claude Code](https://claude.ai/code)"
            git push
            echo "Successfully committed and pushed markdown file to blog repository"
          else
            echo "No changes to commit in blog repository"
          fi
